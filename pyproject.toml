[build-system]
build-backend = "poetry.core.masonry.api"
requires = ["poetry-core>=1.0.0"]

[tool]

[tool.black]
include = '\.pyi?$'
line-length = 120
target-version = ["py310"]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise AssertionError",
    "raise NotImplementedError",
    "pass",
    "if 0:",
    "if __name__ == .__main__.:",
    "nocov",
    "if TYPE_CHECKING:",
]
fail_under = 80
show_missing = true

[tool.coverage.run]
omit = ["tests/*"]

[tool.isort]
combine_as_imports = "false"
force_grid_wrap = 0
include_trailing_comma = "true"
known_first_party = "bifrost"
line_length = 120
multi_line_output = 3
profile = "black"

[tool.mypy]
disallow_untyped_defs = true
exclude = "bifrost/orm/migrations"
follow_imports = "silent"
ignore_missing_imports = true
python_version = ">=3.11,<4.0"
warn_return_any = true
warn_unused_configs = true

[tool.poetry]
authors = ["niels van hooij <niels.vanhooij@kpn.com>"]
description = ""
name = "phantom-communicator"
readme = "README.md"
version = "0.4.2"

[tool.poetry.dependencies]
asyncssh = "^2.14.2"
python = ">=3.11,<4.0"
scrapli-community = "^2024.1.30"
scrapli-replay = "^2024.1.30"
scrapli-transfer-utils = {git = "https://github.com/nielsvanhooy/scrapli_transfer_utils.git"}
pytest = "^8.1.1"
scrapli = "^2024.1.30"
scrapli-cfg = {git = "https://github.com/nielsvanhooy/scrapli_cfg.git"}

[tool.poetry.dev-dependencies]
bandit = "^1.7.8"
black = "^24.3.0"
flake8 = "^7.0.0"
ipython = "^8.22.2"
isort = "^5.13.2"
mypy = "^1.9.0"
pre-commit = "^3.6.2"
pylint = "^3.1.0"
pylint-pydantic = "^0.3.2"
pytest = "^8.1.1"
pytest-asyncio = "^0.23.5.post1"
pytest-cov = "^4.1.0"
pytest-dotenv = "^0.5.2"
responses = "^0.25.0"
safety = "^3.0.1"
uvloop = "^0.19.0"

[tool.poetry.extras]
genie = ["pyats", "pyats"]

[tool.pylint.BASIC]
good-names = "_,__,i,e,k,v,fn,get,post,put,patch,delete,route,asgi,websocket,Dependency,Body,Parameter"
no-docstring-rgx = "(__.*__|main|test.*|.*test|.*Test|^_.*)$"

[tool.pylint.FORMAT]
max-line-length = "120"

[tool.pylint.LOGGING]
logging-modules = ["logging","picologging"]

[tool.pylint.MASTER]
load-plugins = "pylint_pydantic"

[tool.pylint.MESSAGE_CONTROL]
disable = [
    "line-too-long",
    "invalid-name",
    "missing-class-docstring",
    "missing-module-docstring",
    "too-few-public-methods",
    "duplicate-code",
    "missing-docstring",
]
enable = "useless-suppression"
extension-pkg-allow-list = ["pydantic","asyncpg.pgproto.pgproto"]

[tool.pylint.REPORTS]
reports = "no"

[tool.pylint.VARIABLES]
ignored-argument-names = "args|kwargs|_|__"

[tool.pytest.ini_options]
addopts = "--no-cov -p no:cacheprovider -vv  --doctest-modules --doctest-glob=*.md"
cache_dir = ".pytest_cache"
env_files = [".env"]

[tool.pdm]
[tool.pdm.dev-dependencies]
dev = [
    "bandit<2.0.0,>=1.7.8",
    "black<25.0.0,>=24.3.0",
    "flake8<8.0.0,>=7.0.0",
    "ipython<9.0.0,>=8.22.2",
    "isort<6.0.0,>=5.13.2",
    "mypy<2.0.0,>=1.9.0",
    "pre-commit<4.0.0,>=3.6.2",
    "pylint<4.0.0,>=3.1.0",
    "pylint-pydantic<1.0.0,>=0.3.2",
    "pytest<9.0.0,>=8.1.1",
    "pytest-asyncio<1.0.0.0,>=0.23.5.post1",
    "pytest-cov<5.0.0,>=4.1.0",
    "pytest-dotenv<1.0.0,>=0.5.2",
    "responses<1.0.0,>=0.25.0",
    "safety<4.0.0,>=3.0.1",
    "uvloop<1.0.0,>=0.19.0",
]

[tool.pdm.build]
includes = []

[project]
authors = [
    {name = "niels van hooij", email = "niels.vanhooij@kpn.com"},
]
requires-python = "<4.0,>=3.11"
dependencies = [
    "asyncssh<3.0.0,>=2.14.2",
    "scrapli-community<2025.0.0,>=2024.1.30",
    "scrapli-replay<2025.0.0,>=2024.1.30",
    "scrapli-transfer-utils @ git+https://github.com/nielsvanhooy/scrapli_transfer_utils.git",
    "pytest<9.0.0,>=8.1.1",
    "scrapli[pyats]<2025.0.0,>=2024.1.30",
    "scrapli-cfg @ git+https://github.com/nielsvanhooy/scrapli_cfg.git",
    "gufo-snmp>=0.5.1",
    "anyio>=4.4.0",
    "netaddr>=1.3.0",
]
description = ""
name = "phantom-communicator"
readme = "README.md"
version = "0.4.2"
